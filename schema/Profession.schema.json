{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "/Profession.schema.json",
  "$ref": "#/$defs/Profession",
  "$defs": {
    "Profession": {
      "title": "Profession",
      "type": "object",
      "properties": {
        "id": {
          "description": "The profession's identifier. An unique, increasing integer.",
          "type": "integer",
          "minimum": 1
        },
        "group": {
          "description": "The profession group.",
          "$ref": "#/$defs/ProfessionGroup"
        },
        "versions": {
          "description": "A list of professions representing the same profession but with (slightly)\ndifferent stats. For example, there may be a profession in a regional\nsourcebook or in the core rules and a profession in an extension rulebook\nlike Magic of Aventuria, where the profession is basically called the same\nand almost has the same values, but the version from Magic of Aventuria\nfeatures a spell style special ability that does not exist in the core\nrules or regional sourcebook.\n\nThe profession representation may feature different values for different\nexplicitly mentioned experience levels. In most cases, there is only one\nstats package, which targets the experience level *Experienced*.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/ProfessionVersion"
          },
          "minItems": 1
        }
      },
      "required": [
        "id",
        "group",
        "versions"
      ],
      "additionalProperties": false
    },
    "ProfessionGroup": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Mundane"
            },
            "mundane": {
              "$ref": "#/$defs/MundaneProfessionGroup"
            }
          },
          "required": [
            "tag",
            "mundane"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Magical"
            },
            "magical": {
              "$ref": "#/$defs/MagicalProfessionGroup"
            }
          },
          "required": [
            "tag",
            "magical"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Blessed"
            },
            "blessed": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "blessed"
          ],
          "additionalProperties": false
        }
      ]
    },
    "MundaneProfessionGroup": {
      "oneOf": [
        {
          "const": "Profane"
        },
        {
          "const": "Fighter"
        },
        {
          "const": "Religious"
        }
      ]
    },
    "MagicalProfessionGroup": {
      "type": "object",
      "properties": {
        "curriculum": {
          "description": "The curriculum/academy associated with this magical profession, if any.",
          "$ref": "./_SimpleReferences.schema.json#/$defs/CurriculumReference"
        }
      },
      "required": [],
      "additionalProperties": false
    },
    "ProfessionVersion": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Experienced"
            },
            "experienced": {
              "$ref": "#/$defs/ExperiencedProfessionPackage"
            }
          },
          "required": [
            "tag",
            "experienced"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByExperienceLevel"
            },
            "by_experience_level": {
              "$ref": "#/$defs/ProfessionPackagesForDifferentExperienceLevels"
            }
          },
          "required": [
            "tag",
            "by_experience_level"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ExperiencedProfessionPackage": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The profession representation variant's identifier. An unique, increasing\ninteger.",
          "type": "integer",
          "minimum": 1
        },
        "package": {
          "$ref": "#/$defs/ProfessionPackage"
        },
        "src": {
          "$ref": "./source/_PublicationRef.schema.json#/$defs/PublicationRefs"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/ProfessionTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "package",
        "src",
        "translations"
      ],
      "additionalProperties": false
    },
    "ProfessionPackagesForDifferentExperienceLevels": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The profession representation variant's identifier. An unique, increasing\ninteger.",
          "type": "integer",
          "minimum": 1
        },
        "packages_map": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ExperienceLevelDynamicProfessionPackage"
          }
        },
        "src": {
          "$ref": "./source/_PublicationRef.schema.json#/$defs/PublicationRefs"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/ProfessionTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "packages_map",
        "src",
        "translations"
      ],
      "additionalProperties": false
    },
    "ExperienceLevelDynamicProfessionPackage": {
      "type": "object",
      "properties": {
        "experience_level_id": {
          "description": "The experience level this profession targets. The experience level\nmust be unique for this representation.",
          "type": "integer",
          "default": 3,
          "maximum": 7,
          "minimum": 1
        },
        "package": {
          "$ref": "#/$defs/ProfessionPackage"
        }
      },
      "required": [
        "experience_level_id",
        "package"
      ],
      "additionalProperties": false
    },
    "ProfessionPackage": {
      "title": "Profession Representation Variant",
      "type": "object",
      "properties": {
        "ap_value": {
          "description": "What does the professional package cost in adventure points?",
          "type": "integer",
          "minimum": 0
        },
        "prerequisites": {
          "description": "Which prerequisites must be met to buy the stat block? For example, a\ncharacter might need the advantage Spellcaster or Blessed. Note: the AP\ncost for a profession package does not include these prerequisites.",
          "$ref": "./_Prerequisite.schema.json#/$defs/ProfessionPrerequisites"
        },
        "options": {
          "description": "In some areas, the profession package grants a loose set of stats where the\nplayer must choose between different options for the profession package.",
          "$ref": "#/$defs/ProfessionPackageOptions"
        },
        "special_abilities": {
          "description": "Any special abilities the profession receives from the package.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/SpecialAbility"
          }
        },
        "combat_techniques": {
          "description": "Provides ratings for the combat techniques that the hero receives from the\npackage.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/CombatTechniqueRating"
          }
        },
        "skills": {
          "description": "The skill ratings the package grants to the hero.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/SkillRating"
          }
        },
        "spells": {
          "description": "The skill ratings a magical profession receives for spells; these spells\nare considered activated. Spells from an unfamiliar Tradition, if any, are\nidentified as such.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/SpellRating"
          }
        },
        "liturgical_chants": {
          "description": "Clerical professions receive these liturgical chants at the listed skill\nratings. These liturgical chants are considered activated.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/LiturgicalChantRating"
          }
        },
        "suggested_advantages": {
          "description": "Typical advantages for the profession.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/AdvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "suggested_disadvantages": {
          "description": "Typical disadvantages for the profession.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/DisadvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "unsuitable_advantages": {
          "description": "These advantages do not fit well with this profession; to be checked with\nthe GM before taking any of them.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/AdvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "unsuitable_disadvantages": {
          "description": "These disadvantages do not fit well with this profession; to be checked\nwith the GM before taking any of them.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/DisadvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "variants": {
          "description": "Provides examples of variants for the profession, which may include changes\nto AP values and additional or modified skill ratings, special abilities,\nor combat techniques, as compared to the basic profession. Usually picking\na variant is optional, but there are some rare exceptions where picking a\nvariant is required.",
          "$ref": "#/$defs/ProfessionVariants"
        }
      },
      "required": [
        "ap_value"
      ],
      "additionalProperties": false
    },
    "ProfessionTranslation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the basic profession.",
          "$ref": "#/$defs/ProfessionName"
        },
        "specification": {
          "description": "A name addition of the profession. This will contain texts like name of\nthe academy or the witch circle. It is enclosed in parenthesis, but the\ndatabase entry must not contain parenthesis.",
          "$ref": "#/$defs/ProfessionName"
        },
        "suggested_advantages": {
          "description": "Typical advantages for the profession.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "suggested_disadvantages": {
          "description": "Typical disadvantages for the profession.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "unsuitable_advantages": {
          "description": "These advantages do not fit well with this profession; to be checked with\nthe GM before taking any of them.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "unsuitable_disadvantages": {
          "description": "These disadvantages do not fit well with this profession; to be checked\nwith the GM before taking any of them.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "errata": {
          "$ref": "./source/_Erratum.schema.json#/$defs/Errata"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "ProfessionVariants": {
      "description": "Provides examples of variants for the profession, which may include changes\nto AP values and additional or modified skill ratings, special abilities, or\ncombat techniques, as compared to the basic profession. Usually picking a\nvariant is optional, but there are some rare exceptions where picking a\nvariant is required.",
      "type": "object",
      "properties": {
        "is_selection_required": {
          "description": "If the selection of a profession variant is required.",
          "type": "boolean"
        },
        "list": {
          "description": "The list of profession variants.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/ProfessionVariant"
          },
          "minItems": 1
        }
      },
      "required": [
        "is_selection_required",
        "list"
      ],
      "additionalProperties": false
    },
    "ProfessionVariant": {
      "title": "Profession Variant",
      "type": "object",
      "properties": {
        "id": {
          "description": "The profession variant's identifier. An unique, increasing integer.",
          "type": "integer",
          "minimum": 1
        },
        "ap_value": {
          "description": "The AP value you have to pay for the package variant.",
          "type": "integer"
        },
        "prerequisites": {
          "description": "Which prerequisites must be met to buy the stat block? For example, a\ncharacter might need the advantage Spellcaster or Blessed. Note: the AP\ncost for a profession package does not include these prerequisites.",
          "$ref": "./_Prerequisite.schema.json#/$defs/ProfessionPrerequisites"
        },
        "options": {
          "$ref": "#/$defs/ProfessionVariantPackageOptions"
        },
        "special_abilities": {
          "description": "Any special abilities the profession receives from the package variant.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/VariantSpecialAbility"
          }
        },
        "combat_techniques": {
          "description": "Provides ratings for the combat techniques that the hero receives from the\npackage variant.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/CombatTechniqueRating"
          }
        },
        "skills": {
          "description": "The skill ratings the package variant grants to the hero.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/SkillRating"
          }
        },
        "spells": {
          "description": "The skill ratings a magical profession variant receives for spells; these\nspells are considered activated. Spells from an unfamiliar Tradition, if\nany, are identified as such.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/SpellRating"
          }
        },
        "liturgical_chants": {
          "description": "Clerical professions receive these liturgical chants at the listed skill\nratings. These liturgical chants are considered activated.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/LiturgicalChantRating"
          }
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/ProfessionVariantTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "ap_value",
        "translations"
      ],
      "additionalProperties": false
    },
    "ProfessionVariantTranslation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the profession variant.",
          "$ref": "#/$defs/ProfessionName"
        },
        "full_text": {
          "description": "A text that replaces the generated text for the profession variant.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "concluding_text": {
          "description": "A text that is appended to the generated text for the profession variant.\n\nHas no effect when `full_text` is set.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "SpecialAbility": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "#/$defs/FixedSpecialAbility"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Selection"
            },
            "selection": {
              "$ref": "#/$defs/SpecialAbilitySelection"
            }
          },
          "required": [
            "tag",
            "selection"
          ],
          "additionalProperties": false
        }
      ]
    },
    "FixedSpecialAbility": {
      "$ref": "#/$defs/SpecialAbilityDefinition"
    },
    "SpecialAbilitySelection": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SpecialAbilityDefinition"
          },
          "minItems": 2
        }
      },
      "required": [
        "options"
      ],
      "additionalProperties": false
    },
    "SpecialAbilityDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the combat technique to provide the rating for.",
          "$ref": "./_IdentifierGroup.schema.json#/$defs/SpecialAbilityIdentifier"
        },
        "level": {
          "description": "The level of the received special ability.",
          "type": "integer",
          "minimum": 1
        },
        "options": {
          "description": "Received select options. Order is important. Typically, you only need the\nfirst array index, though.",
          "type": "array",
          "items": {
            "$ref": "./_IdentifierGroup.schema.json#/$defs/RequirableSelectOptionIdentifier"
          },
          "minItems": 1
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "VariantSpecialAbility": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "#/$defs/FixedVariantSpecialAbility"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Selection"
            },
            "selection": {
              "$ref": "#/$defs/VariantSpecialAbilitySelection"
            }
          },
          "required": [
            "tag",
            "selection"
          ],
          "additionalProperties": false
        }
      ]
    },
    "FixedVariantSpecialAbility": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the combat technique to provide the rating for.",
          "$ref": "./_IdentifierGroup.schema.json#/$defs/SpecialAbilityIdentifier"
        },
        "level": {
          "description": "The level of the received special ability.",
          "type": "integer",
          "minimum": 1
        },
        "options": {
          "description": "Received select options. Order is important. Typically, you only need the\nfirst array index, though.",
          "type": "array",
          "items": {
            "$ref": "./_IdentifierGroup.schema.json#/$defs/RequirableSelectOptionIdentifier"
          },
          "minItems": 1
        },
        "active": {
          "description": "if set to `false`, if the selection is granted by the basic package, it\nis removed.",
          "const": false
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "VariantSpecialAbilitySelection": {
      "type": "object",
      "properties": {
        "active": {
          "description": "if set to `false`, if the selection is granted by the basic package, it\nis removed.",
          "const": false
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SpecialAbilityDefinition"
          },
          "minItems": 2
        }
      },
      "required": [
        "options"
      ],
      "additionalProperties": false
    },
    "CombatTechniqueRating": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the combat technique to provide the rating for.",
          "$ref": "./_IdentifierGroup.schema.json#/$defs/CombatTechniqueIdentifier"
        },
        "rating": {
          "description": "The rating bonus provided for the combat technique. If used in a profession\nvariant, it can also be used to lower the bonus of the base profession.\n\n**Note:** This is a rating *bonus*, so it will be *added* to the default\nvalue of 6.",
          "type": "integer",
          "maximum": 6,
          "minimum": -6
        }
      },
      "required": [
        "id",
        "rating"
      ],
      "additionalProperties": false
    },
    "SkillRating": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the skill to provide the rating for.",
          "$ref": "./_Identifier.schema.json#/$defs/SkillIdentifier"
        },
        "rating": {
          "description": "The rating bonus provided for the skill. If used in a profession variant,\nit can also be used to lower the bonus of the base profession",
          "type": "integer",
          "maximum": 8,
          "minimum": -8
        }
      },
      "required": [
        "id",
        "rating"
      ],
      "additionalProperties": false
    },
    "SpellRating": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier(s) of the spell(s) to choose from to provide the rating for.\nIf multiple spells are provided, they must all have the same improvement\ncost.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/SpellIdentifier"
          },
          "minItems": 1
        },
        "rating": {
          "description": "The rating bonus provided for the (selected) spell. If used in a profession\nvariant, it can also be used to lower the bonus of the base profession.",
          "type": "integer",
          "maximum": 10,
          "minimum": -10
        }
      },
      "required": [
        "id",
        "rating"
      ],
      "additionalProperties": false
    },
    "SpellIdentifier": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Spellwork"
            },
            "spellwork": {
              "$ref": "#/$defs/ProfessionSpellworkIdentifier"
            }
          },
          "required": [
            "tag",
            "spellwork"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "MagicalAction"
            },
            "magical_action": {
              "$ref": "#/$defs/ProfessionMagicalActionIdentifier"
            }
          },
          "required": [
            "tag",
            "magical_action"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ProfessionSpellworkIdentifier": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the spell to provide the rating for.",
          "$ref": "./_IdentifierGroup.schema.json#/$defs/SpellworkIdentifier"
        },
        "tradition": {
          "description": "If the spell is not part of the magical tradition required by the\npackage, this references the magical tradition it is part of. It can also\nbe used to define the target magical tradition of a spell if multiple\nmagical traditions are required and the spell is available to multiple\nof them.",
          "$ref": "./_SimpleReferences.schema.json#/$defs/MagicalTraditionReference"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "ProfessionMagicalActionIdentifier": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the magical action to provide the rating for.",
          "$ref": "./_IdentifierGroup.schema.json#/$defs/MagicalActionIdentifier"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "LiturgicalChantRating": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier(s) of the liturgical chant(s) to choose from to provide\nthe rating for. If multiple liturgical chants are provided, they must all\nhave the same improvement cost.",
          "type": "array",
          "items": {
            "$ref": "./_IdentifierGroup.schema.json#/$defs/LiturgyIdentifier"
          },
          "minItems": 1
        },
        "rating": {
          "description": "The rating bonus provided for the selected liturgical chant. If used in a\nprofession variant, it can also be used to lower the bonus of the base\nprofession.",
          "type": "integer",
          "maximum": 10,
          "minimum": -10
        }
      },
      "required": [
        "id",
        "rating"
      ],
      "additionalProperties": false
    },
    "ProfessionPackageOptions": {
      "description": "In some areas, the profession package grants a loose set of stats where the\nplayer must choose between different options for the profession package.",
      "type": "object",
      "properties": {
        "skill_specialization": {
          "$ref": "#/$defs/SkillSpecializationOptions"
        },
        "languages_scripts": {
          "$ref": "#/$defs/LanguagesScriptsOptions"
        },
        "combat_techniques": {
          "$ref": "#/$defs/CombatTechniquesOptions"
        },
        "cantrips": {
          "$ref": "#/$defs/CantripsOptions"
        },
        "curses": {
          "$ref": "#/$defs/CursesOptions"
        },
        "terrain_knowledge": {
          "$ref": "#/$defs/TerrainKnowledgeOptions"
        },
        "skills": {
          "$ref": "#/$defs/SkillsOptions"
        }
      },
      "required": [],
      "minProperties": 1,
      "additionalProperties": false
    },
    "ProfessionVariantPackageOptions": {
      "description": "In some areas, the profession package grants a loose set of stats where the\nplayer must choose between different options for the profession package. The\nvariant may override or remove those options.",
      "type": "object",
      "properties": {
        "skill_specialization": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Remove"
                },
                "remove": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "tag",
                "remove"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Override"
                },
                "override": {
                  "$ref": "#/$defs/SkillSpecializationOptions"
                }
              },
              "required": [
                "tag",
                "override"
              ],
              "additionalProperties": false
            }
          ]
        },
        "languages_scripts": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Remove"
                },
                "remove": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "tag",
                "remove"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Override"
                },
                "override": {
                  "$ref": "#/$defs/LanguagesScriptsOptions"
                }
              },
              "required": [
                "tag",
                "override"
              ],
              "additionalProperties": false
            }
          ]
        },
        "combat_techniques": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Remove"
                },
                "remove": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "tag",
                "remove"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Override"
                },
                "override": {
                  "$ref": "#/$defs/CombatTechniquesOptions"
                }
              },
              "required": [
                "tag",
                "override"
              ],
              "additionalProperties": false
            }
          ]
        },
        "cantrips": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Remove"
                },
                "remove": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "tag",
                "remove"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Override"
                },
                "override": {
                  "$ref": "#/$defs/CantripsOptions"
                }
              },
              "required": [
                "tag",
                "override"
              ],
              "additionalProperties": false
            }
          ]
        },
        "curses": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Remove"
                },
                "remove": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "tag",
                "remove"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Override"
                },
                "override": {
                  "$ref": "#/$defs/CursesOptions"
                }
              },
              "required": [
                "tag",
                "override"
              ],
              "additionalProperties": false
            }
          ]
        },
        "terrain_knowledge": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Remove"
                },
                "remove": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "tag",
                "remove"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Override"
                },
                "override": {
                  "$ref": "#/$defs/TerrainKnowledgeOptions"
                }
              },
              "required": [
                "tag",
                "override"
              ],
              "additionalProperties": false
            }
          ]
        },
        "skills": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Remove"
                },
                "remove": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "tag",
                "remove"
              ],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "tag": {
                  "const": "Override"
                },
                "override": {
                  "$ref": "#/$defs/SkillsOptions"
                }
              },
              "required": [
                "tag",
                "override"
              ],
              "additionalProperties": false
            }
          ]
        }
      },
      "required": [],
      "minProperties": 1,
      "additionalProperties": false
    },
    "SkillSpecializationOptions": {
      "description": "Select an application from a skill or from one of a list of skills where you\nget a skill specialization for. You can also specify a skill groups from\nwhich you can choose a skill.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Single"
            },
            "single": {
              "$ref": "#/$defs/SingleSkillSpecializationOption"
            }
          },
          "required": [
            "tag",
            "single"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Group"
            },
            "group": {
              "$ref": "#/$defs/SkillGroupSkillSpecializationOption"
            }
          },
          "required": [
            "tag",
            "group"
          ],
          "additionalProperties": false
        }
      ]
    },
    "SingleSkillSpecializationOption": {
      "type": "object",
      "properties": {
        "options": {
          "description": "Possible skills to get a skill specialization for.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/SkillReference"
          },
          "minItems": 1,
          "uniqueItems": true
        }
      },
      "required": [
        "options"
      ],
      "additionalProperties": false
    },
    "SkillGroupSkillSpecializationOption": {
      "$ref": "./_SimpleReferences.schema.json#/$defs/SkillGroupReference"
    },
    "LanguagesScriptsOptions": {
      "description": "Buy languages and scripts for a specific amount of AP.",
      "type": "object",
      "properties": {
        "ap_value": {
          "description": "The AP value you can buy languages and scripts for.",
          "type": "integer",
          "minimum": 2,
          "multipleOf": 2
        }
      },
      "required": [
        "ap_value"
      ],
      "additionalProperties": false
    },
    "CombatTechniquesOptions": {
      "description": "Select one or more combat techniques you get a CtR bonus for.",
      "type": "object",
      "properties": {
        "fixed": {
          "description": "Specify the number of combat techniques that can be selected so that they\nget increased to a specific CtR. There can be multiple selections with\ndifferent CtRs.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/RatingForCombatTechniquesNumber"
          },
          "minItems": 1
        },
        "rest_rating": {
          "description": "Define if after the fixed selections the remaining unselected combat\ntechniques will receive a certain rating bonus as well.",
          "type": "integer",
          "maximum": 6,
          "minimum": 1
        },
        "options": {
          "description": "The list of combat techniques to choose from.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/CombatTechniqueReference"
          },
          "minItems": 2
        }
      },
      "required": [
        "fixed",
        "options"
      ],
      "additionalProperties": false
    },
    "RatingForCombatTechniquesNumber": {
      "type": "object",
      "properties": {
        "number": {
          "description": "The number of selectable combat techniques.",
          "type": "integer",
          "minimum": 1
        },
        "rating": {
          "description": "The rating bonus provided for the selected combat technique(s).\n\n**Note:** This is a rating *bonus*, so it will be *added* to the default\nvalue of 6.",
          "type": "integer",
          "maximum": 6,
          "minimum": 1
        }
      },
      "required": [
        "number",
        "rating"
      ],
      "additionalProperties": false
    },
    "CantripsOptions": {
      "description": "Select one or more cantrips you receive.",
      "type": "object",
      "properties": {
        "number": {
          "description": "The number of selectable cantrips.",
          "type": "integer",
          "minimum": 1
        },
        "options": {
          "description": "The list of cantrips to choose from.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/CantripReference"
          },
          "minItems": 2
        }
      },
      "required": [
        "number",
        "options"
      ],
      "additionalProperties": false
    },
    "CursesOptions": {
      "description": "Buy curses for a specific amount of AP.",
      "type": "object",
      "properties": {
        "ap_value": {
          "description": "The AP value you can buy curses for.",
          "type": "integer",
          "minimum": 2,
          "multipleOf": 2
        }
      },
      "required": [
        "ap_value"
      ],
      "additionalProperties": false
    },
    "TerrainKnowledgeOptions": {
      "description": "Select one of a list of possible terrain knowledges",
      "type": "object",
      "properties": {
        "options": {
          "description": "The list of possible terrain knowledges.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/TerrainKnowledgeOptionReference"
          },
          "minItems": 2
        }
      },
      "required": [
        "options"
      ],
      "additionalProperties": false
    },
    "TerrainKnowledgeOptionReference": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The terrain knowledge option's identifier.",
          "type": "integer",
          "maximum": 10,
          "minimum": 1
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "SkillsOptions": {
      "description": "Buy skills for a specific amount of AP.",
      "type": "object",
      "properties": {
        "group": {
          "description": "If specified, you may only choose from skills of the specified group.",
          "$ref": "./_SimpleReferences.schema.json#/$defs/SkillGroupReference"
        },
        "ap_value": {
          "description": "The AP value you can buy skills for.",
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "ap_value"
      ],
      "additionalProperties": false
    },
    "ProfessionName": {
      "description": "The name of the profession that may have sex-specific names.",
      "oneOf": [
        {
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "description": "The name from the source publication.",
              "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
            },
            "male": {
              "description": "The male name.",
              "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
            },
            "female": {
              "description": "The female name.",
              "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
            }
          },
          "required": [
            "default",
            "male",
            "female"
          ],
          "additionalProperties": false
        }
      ]
    }
  }
}
