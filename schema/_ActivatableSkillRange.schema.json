{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "/_ActivatableSkillRange.schema.json",
  "$defs": {
    "Range": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/$defs/RangeValue"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/RangeTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "value"
      ],
      "additionalProperties": false
    },
    "RangeValue": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Modifiable"
            },
            "modifiable": {
              "$ref": "#/$defs/ModifiableRange"
            }
          },
          "required": [
            "tag",
            "modifiable"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Sight"
            },
            "sight": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "sight"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Self"
            },
            "self": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "self"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Global"
            },
            "global": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "global"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Touch"
            },
            "touch": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "touch"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "#/$defs/FixedRange"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "CheckResultBased"
            },
            "check_result_based": {
              "$ref": "#/$defs/CheckResultBasedRange"
            }
          },
          "required": [
            "tag",
            "check_result_based"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ModifiableRange": {
      "type": "object",
      "properties": {
        "is_maximum": {
          "description": "If `true`, the range is a maximum range.",
          "const": true
        },
        "initial_modification_level": {
          "description": "The initial skill modification identifier/level.",
          "type": "integer",
          "maximum": 6,
          "minimum": 1
        },
        "is_radius": {
          "description": "If `true`, the range is a radius.",
          "const": true
        }
      },
      "required": [
        "initial_modification_level"
      ],
      "additionalProperties": false
    },
    "FixedRange": {
      "type": "object",
      "properties": {
        "is_maximum": {
          "description": "If `true`, the range is a maximum range.",
          "const": true
        },
        "value": {
          "description": "The (unitless) range value.",
          "type": "integer",
          "minimum": 1
        },
        "unit": {
          "description": "The unit of the `value`.",
          "$ref": "#/$defs/RangeUnit"
        },
        "is_radius": {
          "description": "If `true`, the range is a radius.",
          "const": true
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "additionalProperties": false
    },
    "CheckResultBasedRange": {
      "description": "Defines the range being based on a check result.",
      "type": "object",
      "properties": {
        "base": {
          "description": "The base value that is derived from the check result.",
          "$ref": "./_ActivatableSkillCheckResultBased.schema.json#/$defs/CheckResultValue"
        },
        "modifier": {
          "description": "If defined, it modifies the base value.",
          "$ref": "./_ActivatableSkillCheckResultBased.schema.json#/$defs/CheckResultBasedModifier"
        },
        "is_maximum": {
          "description": "If the range is the maximum range.",
          "const": true
        },
        "unit": {
          "description": "The duration unit.",
          "$ref": "#/$defs/RangeUnit"
        },
        "is_radius": {
          "description": "If `true`, the range is a radius.",
          "const": true
        }
      },
      "required": [
        "base",
        "unit"
      ],
      "additionalProperties": false
    },
    "RangeTranslation": {
      "type": "object",
      "properties": {
        "note": {
          "description": "A note, appended to the generated string in parenthesis. If the\ngenerated is modified using `replacement`, the note is appended to\nthe modifier string.",
          "$ref": "./_ResponsiveText.schema.json#/$defs/ResponsiveTextOptional"
        },
        "replacement": {
          "description": "A replacement string. If `note` is provided, it is appended to the\nreplaced string.",
          "$ref": "./_ResponsiveText.schema.json#/$defs/ResponsiveTextReplace"
        }
      },
      "required": [],
      "minProperties": 1,
      "additionalProperties": false
    },
    "RangeUnit": {
      "oneOf": [
        {
          "const": "Steps"
        },
        {
          "const": "Miles"
        }
      ]
    }
  }
}
