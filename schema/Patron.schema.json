{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "/Patron.schema.json",
  "$ref": "#/$defs/Patron",
  "$defs": {
    "Patron": {
      "title": "Patron",
      "type": "object",
      "properties": {
        "id": {
          "description": "The patron's identifier. An unique, increasing integer.",
          "type": "integer",
          "minimum": 1
        },
        "category": {
          "description": "The patron's category.",
          "$ref": "./_SimpleReferences.schema.json#/$defs/PatronCategoryReference"
        },
        "skills": {
          "description": "The patron-specific skills.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/SkillReference"
          },
          "minItems": 3,
          "maxItems": 3
        },
        "culture": {
          "description": "The patron is only available to a certain set of cultures. It may be\navailable to all, it may be available to only specific ones (intersection)\nand it may be available to all except specific ones to the listed cultures\n(difference).",
          "$ref": "#/$defs/PatronCulture"
        },
        "primary_patron_cultures": {
          "description": "The list of cultures where patrons from this category can be the primary\npatron of.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/CultureReference"
          },
          "uniqueItems": true
        },
        "powers": {
          "description": "The patron-specific powers. Used by animist power Animal Powers Iâ€“III and\nshould only be present on animal patrons.",
          "$ref": "#/$defs/AnimalPowers"
        },
        "ae_cost": {
          "description": "The patron-specific AE cost. Used by several animist forces for animal\npatrons.",
          "type": "integer",
          "minimum": 2,
          "multipleOf": 2
        },
        "improvement_cost": {
          "description": "The patron-specific improvement cost. Used by several animist forces for\nanimal patrons.",
          "$ref": "./_ImprovementCost.schema.json#/$defs/ImprovementCost"
        },
        "common_advantages": {
          "description": "The patron may grant common advantages that are taken into account during\ncharacter creation.\n\n*Source:* Geisterwald & Knochenklippen, p. 6-7",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/AdvantageReference"
          }
        },
        "common_disadvantages": {
          "description": "The patron may grant common disadvantages that are taken into account\nduring character creation.\n\n*Source:* Geisterwald & Knochenklippen, p. 6-7",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/DisadvantageReference"
          }
        },
        "common_spellworks": {
          "description": "The animist may learn spellworks common for this patron.\n\n*Source:* Geisterwald & Knochenklippen, p. 6-7",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/SpellworkReference"
          }
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/PatronTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "category",
        "skills",
        "culture",
        "translations"
      ],
      "additionalProperties": false
    },
    "PatronTranslation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the patron.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "PatronCulture": {
      "description": "The patron cultures the patron is or is not part of. If the patron is part of\nall patron cultures, the set should be empty and the operation should be\ndifference.",
      "type": "object",
      "properties": {
        "set": {
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/CultureReference"
          }
        },
        "operation": {
          "$ref": "#/$defs/PatronCultureOperation"
        }
      },
      "required": [
        "set",
        "operation"
      ],
      "additionalProperties": false
    },
    "PatronCultureOperation": {
      "description": "The set operation to combine the set of all patron cultures with the\nspecified set of patron cultures: If they should intersect, the patron is\nonly part of the given cultures. If they should differ, the patron is only\npart of the cultures that are not given.",
      "oneOf": [
        {
          "const": "Intersection"
        },
        {
          "const": "Difference"
        }
      ]
    },
    "AnimalPowers": {
      "type": "object",
      "properties": {
        "level1": {
          "$ref": "#/$defs/AnimalPowersLevel1"
        },
        "level2": {
          "$ref": "#/$defs/AnimalPowersLevel2"
        },
        "level3": {
          "$ref": "#/$defs/AnimalPowersLevel3"
        }
      },
      "required": [
        "level1",
        "level2",
        "level3"
      ],
      "additionalProperties": false
    },
    "AdvantageAnimalPower": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The advantage's identifier.",
          "$ref": "./_Identifier.schema.json#/$defs/AdvantageIdentifier"
        },
        "level": {
          "description": "It grants a higher level of the advantage.",
          "type": "integer",
          "minimum": 2
        },
        "option": {
          "description": "It grants a specific general option of the advantage.",
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "SkillAnimalPower": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The skill's identifier.",
          "$ref": "./_Identifier.schema.json#/$defs/SkillIdentifier"
        },
        "points": {
          "description": "The points that gets added to the skill's rating.",
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "id",
        "points"
      ],
      "additionalProperties": false
    },
    "AnimalPowerLevel1": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Advantage"
            },
            "advantage": {
              "$ref": "#/$defs/AdvantageAnimalPower"
            }
          },
          "required": [
            "tag",
            "advantage"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Skill"
            },
            "skill": {
              "$ref": "#/$defs/SkillAnimalPower"
            }
          },
          "required": [
            "tag",
            "skill"
          ],
          "additionalProperties": false
        }
      ]
    },
    "AnimalPowersLevel1": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/AnimalPowerLevel1"
      },
      "minItems": 1
    },
    "CombatAnimalPower": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The combat value.",
          "$ref": "#/$defs/CombatAnimalPowerType"
        },
        "value": {
          "description": "The value that gets added to the combat value.",
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "id",
        "value"
      ],
      "additionalProperties": false
    },
    "CombatAnimalPowerType": {
      "oneOf": [
        {
          "const": "Attack"
        },
        {
          "const": "Parry"
        },
        {
          "const": "RangedCombat"
        },
        {
          "const": "Dodge"
        },
        {
          "const": "DamagePoints"
        },
        {
          "const": "Protection"
        }
      ]
    },
    "AnimalPowerLevel2": {
      "type": "object",
      "properties": {
        "tag": {
          "const": "Combat"
        },
        "combat": {
          "$ref": "#/$defs/CombatAnimalPower"
        }
      },
      "required": [
        "tag",
        "combat"
      ],
      "additionalProperties": false
    },
    "AnimalPowersLevel2": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/AnimalPowerLevel2"
      },
      "minItems": 1
    },
    "AttributeAnimalPower": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The attribute's identifier.",
          "$ref": "./_Identifier.schema.json#/$defs/AttributeIdentifier"
        },
        "value": {
          "description": "The value that gets added to the attribute.",
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "id",
        "value"
      ],
      "additionalProperties": false
    },
    "AnimalPowerLevel3": {
      "type": "object",
      "properties": {
        "tag": {
          "const": "Attribute"
        },
        "attribute": {
          "$ref": "#/$defs/AttributeAnimalPower"
        }
      },
      "required": [
        "tag",
        "attribute"
      ],
      "additionalProperties": false
    },
    "AnimalPowersLevel3": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/AnimalPowerLevel3"
      },
      "minItems": 1
    }
  }
}
