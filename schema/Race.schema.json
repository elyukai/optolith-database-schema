{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "/Race.schema.json",
  "$ref": "#/$defs/Race",
  "$defs": {
    "Race": {
      "title": "Race",
      "description": "A playable race with stats and skills.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The race's identifier. An unique, increasing integer.",
          "type": "integer",
          "minimum": 1
        },
        "ap_value": {
          "description": "How many Adventure Points does the race cost during character creation?",
          "type": "integer",
          "minimum": 0
        },
        "base_values": {
          "description": "The race’s base values.",
          "$ref": "#/$defs/BaseValues"
        },
        "attribute_adjustments": {
          "description": "Describes how to raise or lower maximum attribute values during character creation.",
          "$ref": "#/$defs/AttributeAdjustments"
        },
        "automatic_advantages": {
          "description": "A list of automatically applied advantages. This does only work for advantages with no further configuration such as level or special selection.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/AdvantageReference"
          },
          "minItems": 1
        },
        "strongly_recommended_advantages": {
          "description": "A list of strongly recommended advantages.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/AdvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "strongly_recommended_disadvantages": {
          "description": "A list of strongly recommended disadvantages.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/DisadvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "weight": {
          "description": "Configuration for random weight generation.",
          "$ref": "#/$defs/RandomWeightGeneration"
        },
        "starting_age": {
          "description": "Defines the starting ages for the race. It depends on the selected experience level.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/StartingAgeConfigForExperienceLevel"
          },
          "minItems": 7,
          "maxItems": 7
        },
        "variants": {
          "description": "A list of available race variants where one has to be selected. If no variants are to be selected, a single variant with no name has to be provided which will be used as the missing values for the base race.",
          "$ref": "#/$defs/RaceVariants"
        },
        "src": {
          "$ref": "./source/_PublicationRef.schema.json#/$defs/PublicationRefs"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/RaceTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "ap_value",
        "base_values",
        "attribute_adjustments",
        "weight",
        "starting_age",
        "variants",
        "src",
        "translations"
      ],
      "additionalProperties": false
    },
    "BaseValues": {
      "description": "The race’s base values.",
      "type": "object",
      "properties": {
        "life_points": {
          "description": "The race’s life point base value.",
          "type": "integer"
        },
        "spirit": {
          "description": "The race’s Spirit base value.",
          "type": "integer"
        },
        "toughness": {
          "description": "The race’s Toughness base value.",
          "type": "integer"
        },
        "movement": {
          "description": "The race’s tactical movement rate.",
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "life_points",
        "spirit",
        "toughness",
        "movement"
      ],
      "additionalProperties": false
    },
    "AttributeAdjustments": {
      "description": "Describes how to raise or lower maximum attribute values during character creation.",
      "type": "object",
      "properties": {
        "fixed": {
          "description": "The values by which the maximum of the respective attribute is modified.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/FixedAttributeAdjustment"
          },
          "minItems": 1
        },
        "selectable": {
          "description": "An array of attribute maximum modifiers, where the attribute they apply to is selected from a list of options.\n\nThe array only permits a single entry because no race specified more than one selectable attribute adjustment so far. But the schema allows for multiple entries to be future-proof.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/SelectableAttributeAdjustment"
          },
          "minItems": 1,
          "maxItems": 1
        }
      },
      "required": [],
      "minProperties": 1,
      "additionalProperties": false
    },
    "FixedAttributeAdjustment": {
      "description": "A value by which the maximum of the respective attribute is modified.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The attribute the modifier applies to.",
          "$ref": "./_Identifier.schema.json#/$defs/AttributeIdentifier"
        },
        "value": {
          "description": "The value by which the specified attribute's maximum is modified\n(negative values will lower the maximum).",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "value"
      ],
      "additionalProperties": false
    },
    "SelectableAttributeAdjustment": {
      "description": "A value that will be added to the current maximum of the selected attribute that has been chosen from the listed attributes (negative values will lower the maximum).",
      "type": "object",
      "properties": {
        "list": {
          "description": "A list of attributes the player has to choose from.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/AttributeReference"
          },
          "minItems": 2
        },
        "value": {
          "description": "The value by which the selected attribute's maximum is modified\n(negative values will lower the maximum).",
          "type": "integer"
        }
      },
      "required": [
        "list",
        "value"
      ],
      "additionalProperties": false
    },
    "RandomWeightGeneration": {
      "description": "Configuration for random weight generation.",
      "type": "object",
      "properties": {
        "base": {
          "description": "The base value used for random weight. The height subtrahend; in case of\n`Height - 110 + 2D6` it is `110`.",
          "type": "integer",
          "minimum": 1
        },
        "random": {
          "description": "The dice used for random weight.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/WeightDice"
          },
          "minItems": 1
        }
      },
      "required": [
        "base",
        "random"
      ],
      "additionalProperties": false
    },
    "WeightDice": {
      "type": "object",
      "properties": {
        "number": {
          "description": "Number of dice of the same type. Example: 2 in 2D6.",
          "type": "integer",
          "minimum": 1
        },
        "sides": {
          "description": "Number of sides on every die. Example: 6 in 2D6.",
          "$ref": "./_Dice.schema.json#/$defs/DieType"
        },
        "offset_strategy": {
          "description": "The strategy how to offset the randomly generated values against the base value. Either they are all added or subtracted or even results are added and odd results are subtracted.",
          "$ref": "#/$defs/WeightDiceOffsetStrategy"
        }
      },
      "required": [
        "number",
        "sides",
        "offset_strategy"
      ],
      "additionalProperties": false
    },
    "WeightDiceOffsetStrategy": {
      "description": "The strategy how to offset the randomly generated values against the base value. Either they are all added or subtracted or even results are added and odd results are subtracted.",
      "oneOf": [
        {
          "const": "Add"
        },
        {
          "const": "Subtract"
        },
        {
          "const": "AddEvenSubtractOdd"
        }
      ]
    },
    "StartingAgeConfigForExperienceLevel": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The selected experience level's identifier.",
          "$ref": "./_Identifier.schema.json#/$defs/ExperienceLevelIdentifier"
        },
        "base": {
          "description": "The base value for the selected experience level.",
          "type": "integer",
          "minimum": 1
        },
        "random": {
          "description": "The random value for the selected experience level. It is going to be added to the base value.",
          "$ref": "./_Dice.schema.json#/$defs/Dice"
        }
      },
      "required": [
        "id",
        "base",
        "random"
      ],
      "additionalProperties": false
    },
    "RaceVariants": {
      "description": "A list of available race variants where one has to be selected. If no variants are to be selected, a single variant with no name has to be provided which will be used as the missing values for the base race.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/RaceVariant"
      },
      "minItems": 1
    },
    "RaceVariant": {
      "title": "Race Variant",
      "type": "object",
      "properties": {
        "id": {
          "description": "An unique, increasing integer.",
          "type": "integer",
          "minimum": 1
        },
        "common_cultures": {
          "description": "The list of common cultures.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/CultureReference"
          },
          "minItems": 1
        },
        "common_advantages": {
          "description": "A list of common advantages.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/AdvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "common_disadvantages": {
          "description": "A list of common disadvantages.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/DisadvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "uncommon_advantages": {
          "description": "A list of uncommon advantages.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/AdvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "uncommon_disadvantages": {
          "description": "A list of uncommon disadvantages.",
          "type": "array",
          "items": {
            "title": "Commonness-rated Advantage/Disadvantage",
            "description": "Reference to a commonness-rated advantage or disadvantage. Commonness-rating terms used in the source books are strongly recommended, common, uncommon, suggested and unsuitable.",
            "type": "object",
            "properties": {
              "id": {
                "$ref": "./_Identifier.schema.json#/$defs/DisadvantageIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "minItems": 1
        },
        "hair_color": {
          "description": "An array containing 20 (numeric) hair color identifiers. The array also represents the 20-sided die for a random hair color.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/HairColorReference"
          },
          "minItems": 20,
          "maxItems": 20
        },
        "eye_color": {
          "description": "An array containing 20 (numeric) eye color identifiers. The array also represents the 20-sided die for a random eye color.",
          "type": "array",
          "items": {
            "$ref": "./_SimpleReferences.schema.json#/$defs/EyeColorReference"
          },
          "minItems": 20,
          "maxItems": 20
        },
        "height": {
          "description": "Configuration for random height generation.",
          "$ref": "#/$defs/Height"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/RaceVariantTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "common_cultures",
        "hair_color",
        "eye_color",
        "height",
        "translations"
      ],
      "additionalProperties": false
    },
    "Height": {
      "description": "Configuration for random height generation.",
      "type": "object",
      "properties": {
        "base": {
          "description": "The base value used for random height.",
          "type": "integer",
          "minimum": 1
        },
        "random": {
          "description": "The dice used for random height.",
          "type": "array",
          "items": {
            "$ref": "./_Dice.schema.json#/$defs/Dice"
          },
          "minItems": 1
        }
      },
      "required": [
        "base",
        "random"
      ],
      "additionalProperties": false
    },
    "RaceVariantTranslation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The race variant's name. If left empty, it defaults to the base race name. This can be used if the race has no (visible) variants so that a single variant has to be provided.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "common_advantages": {
          "description": "The respective common advantages text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "common_disadvantages": {
          "description": "The respective common disadvantages text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "uncommon_advantages": {
          "description": "The respective uncommon advantages text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "uncommon_disadvantages": {
          "description": "The respective uncommon disadvantages text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        }
      },
      "required": [],
      "additionalProperties": false
    },
    "RaceTranslation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The race's name.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "attribute_adjustments": {
          "description": "The respective attribute adjustments text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "automatic_advantages": {
          "description": "The respective automatic advantages text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "strongly_recommended_advantages": {
          "description": "The respective strongly recommended advantages text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "strongly_recommended_disadvantages": {
          "description": "The respective strongly recommended disadvantages text from the source book.",
          "$ref": "./_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "errata": {
          "$ref": "./source/_Erratum.schema.json#/$defs/Errata"
        }
      },
      "required": [
        "name",
        "attribute_adjustments"
      ],
      "additionalProperties": false
    }
  }
}
