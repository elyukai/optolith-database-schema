{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "/specialAbility/PactGift.schema.json",
  "$ref": "#/$defs/PactGift",
  "$defs": {
    "PactGift": {
      "title": "Pact Gift",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "../_Activatable.schema.json#/$defs/Id"
        },
        "levels": {
          "$ref": "../_Activatable.schema.json#/$defs/Levels"
        },
        "select_options": {
          "$ref": "../_Activatable.schema.json#/$defs/SelectOptions"
        },
        "maximum": {
          "$ref": "../_Activatable.schema.json#/$defs/Maximum"
        },
        "permanent_demonic_consumption": {
          "$ref": "#/$defs/PactGiftPermanentDemonicConsumption"
        },
        "automatic_entries": {
          "description": "This pact gift has direct influence on the existence of other entries. It may add or remove entries.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/AutomaticEntry"
          },
          "minItems": 1
        },
        "prerequisites": {
          "$ref": "../_Prerequisite.schema.json#/$defs/GeneralPrerequisites"
        },
        "ap_value": {
          "$ref": "../_Activatable.schema.json#/$defs/AdventurePointsValue"
        },
        "src": {
          "$ref": "../source/_PublicationRef.schema.json#/$defs/PublicationRefs"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/PactGiftTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "ap_value",
        "src",
        "translations"
      ],
      "additionalProperties": false
    },
    "PactGiftPermanentDemonicConsumption": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "#/$defs/FixedPactGiftPermanentDemonicConsumption"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PerLevel"
            },
            "per_level": {
              "$ref": "#/$defs/PactGiftPermanentDemonicConsumptionPerLevel"
            }
          },
          "required": [
            "tag",
            "per_level"
          ],
          "additionalProperties": false
        }
      ]
    },
    "FixedPactGiftPermanentDemonicConsumption": {
      "type": "object",
      "properties": {
        "levels": {
          "description": "The levels of *Demonic Consumption* the pact gift causes.",
          "type": "integer",
          "maximum": 4,
          "minimum": 1
        }
      },
      "required": [
        "levels"
      ],
      "additionalProperties": false
    },
    "PactGiftPermanentDemonicConsumptionPerLevel": {
      "type": "object",
      "properties": {
        "levels": {
          "description": "The levels of *Demonic Consumption* the pact gift causes per activated level of the pact gift.",
          "type": "integer",
          "maximum": 4,
          "minimum": 1
        }
      },
      "required": [
        "levels"
      ],
      "additionalProperties": false
    },
    "AutomaticEntry": {
      "type": "object",
      "properties": {
        "action": {
          "description": "What type of action is applied to the target entry?",
          "$ref": "#/$defs/AutomaticEntryAction"
        },
        "apply_ap_value": {
          "description": "If an entry is added or removed, does is cost or grant adventure points or is it free of charge?",
          "type": "boolean"
        },
        "target": {
          "description": "The entry that is to be added or removed. It can be a fixed entry or a selection where the player must choose one entry.",
          "$ref": "#/$defs/AutomaticEntryTarget"
        }
      },
      "required": [
        "action",
        "apply_ap_value",
        "target"
      ],
      "additionalProperties": false
    },
    "AutomaticEntryAction": {
      "oneOf": [
        {
          "const": "Add"
        },
        {
          "const": "Remove"
        }
      ]
    },
    "AutomaticEntryTarget": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Selection"
            },
            "selection": {
              "$ref": "#/$defs/AutomaticEntryTargetSelection"
            }
          },
          "required": [
            "tag",
            "selection"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "#/$defs/FixedAutomaticEntryTarget"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        }
      ]
    },
    "AutomaticEntryTargetSelection": {
      "type": "object",
      "properties": {
        "list": {
          "$ref": "#/$defs/AutomaticEntryTargetSelectionList"
        }
      },
      "required": [
        "list"
      ],
      "additionalProperties": false
    },
    "AutomaticEntryTargetSelectionList": {
      "oneOf": [
        {
          "const": "MagicalTraditions"
        },
        {
          "const": "MagicalDilettanteTraditions"
        }
      ]
    },
    "FixedAutomaticEntryTarget": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "../_IdentifierGroup.schema.json#/$defs/ActivatableIdentifier"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "PactGiftTranslation": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "../_Activatable.schema.json#/$defs/Name"
        },
        "name_in_library": {
          "$ref": "../_Activatable.schema.json#/$defs/NameInLibrary"
        },
        "effect": {
          "$ref": "../_Activatable.schema.json#/$defs/Effect"
        },
        "errata": {
          "$ref": "../source/_Erratum.schema.json#/$defs/Errata"
        }
      },
      "required": [
        "name",
        "effect"
      ],
      "additionalProperties": false
    }
  }
}
