{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "/magicalActions/AnimistPower.schema.json",
  "$ref": "#/$defs/AnimistPower",
  "$defs": {
    "AnimistPower": {
      "title": "Animist Power",
      "type": "object",
      "properties": {
        "id": {
          "description": "The animist power's identifier. An unique, increasing integer.",
          "type": "integer",
          "minimum": 1
        },
        "check": {
          "description": "Lists the linked three attributes used to make a skill check.",
          "$ref": "../_SkillCheck.schema.json#/$defs/SkillCheck"
        },
        "parameters": {
          "description": "Measurable parameters of a animist power.",
          "$ref": "#/$defs/AnimistPowerPerformanceParameters"
        },
        "property": {
          "description": "The associated property.",
          "$ref": "../_SimpleReferences.schema.json#/$defs/PropertyReference"
        },
        "tribe_tradition": {
          "description": "The tribe traditions the animist power is available to. It may be available\nto all or only specific tribes.\n\nIf no tribe tradition is given, the animist power is generally available to\nall tribe traditions.",
          "type": "array",
          "items": {
            "$ref": "../_SimpleReferences.schema.json#/$defs/AnimistTribeReference"
          },
          "uniqueItems": true
        },
        "improvement_cost": {
          "description": "States which column is used to improve the skill. It is a fixed value or\ndepends on the primary patron.",
          "$ref": "#/$defs/AnimistPowerImprovementCost"
        },
        "prerequisites": {
          "$ref": "../_Prerequisite.schema.json#/$defs/AnimistPowerPrerequisites"
        },
        "levels": {
          "description": "The animist power can have multiple levels. Each level is skilled\nseparately. A previous level must be on at least 10 so that the next higher\nlevel can be activated and skilled. A higher level cannot be skilled higher\nthan a lower level. Each level also adds an effect text to the text of the\nfirst level.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/AnimistPowerLevel"
          },
          "minItems": 1
        },
        "src": {
          "$ref": "../source/_PublicationRef.schema.json#/$defs/PublicationRefs"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/AnimistPowerTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "check",
        "parameters",
        "property",
        "tribe_tradition",
        "improvement_cost",
        "src",
        "translations"
      ],
      "additionalProperties": false
    },
    "AnimistPowerTranslation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the animist power.",
          "$ref": "../_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "name_in_library": {
          "description": "The full name of the entry as stated in the sources. Only use when\n`name` needs to be different from full name for text generation\npurposes.",
          "$ref": "../_NonEmptyString.schema.json#/$defs/NonEmptyString"
        },
        "effect": {
          "description": "The effect description may be either a plain text or a text that is\ndivided by a list of effects for each quality level. It may also be a\nlist for each two quality levels.",
          "$ref": "../_ActivatableSkillEffect.schema.json#/$defs/ActivatableSkillEffect"
        },
        "cost": {
          "$ref": "../_ActivatableSkill.schema.json#/$defs/OldParameter"
        },
        "duration": {
          "$ref": "../_ActivatableSkill.schema.json#/$defs/OldParameter"
        },
        "prerequisites": {
          "description": "A prerequisites text.",
          "type": "string"
        },
        "errata": {
          "$ref": "../source/_Erratum.schema.json#/$defs/Errata"
        }
      },
      "required": [
        "name",
        "effect",
        "cost",
        "duration"
      ],
      "additionalProperties": false
    },
    "AnimistPowerLevel": {
      "type": "object",
      "properties": {
        "level": {
          "description": "The level number.",
          "type": "integer",
          "minimum": 2
        },
        "src": {
          "description": "The source references, if different than the references for level 1.",
          "$ref": "../source/_PublicationRef.schema.json#/$defs/PublicationRefs"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/AnimistPowerLevelTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "level",
        "translations"
      ],
      "additionalProperties": false
    },
    "AnimistPowerLevelTranslation": {
      "type": "object",
      "properties": {
        "effect": {
          "description": "An additional effect description for this level.",
          "$ref": "../_NonEmptyString.schema.json#/$defs/NonEmptyMarkdown"
        }
      },
      "required": [
        "effect"
      ],
      "additionalProperties": false
    },
    "AnimistPowerPerformanceParameters": {
      "description": "Measurable parameters of a animist power.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "OneTime"
            },
            "one_time": {
              "$ref": "#/$defs/OneTimeAnimistPowerPerformanceParameters"
            }
          },
          "required": [
            "tag",
            "one_time"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Sustained"
            },
            "sustained": {
              "$ref": "#/$defs/SustainedAnimistPowerPerformanceParameters"
            }
          },
          "required": [
            "tag",
            "sustained"
          ],
          "additionalProperties": false
        }
      ]
    },
    "OneTimeAnimistPowerPerformanceParameters": {
      "type": "object",
      "properties": {
        "cost": {
          "description": "The AE cost value, either a flat value or defined dynamically by the\nprimary patron.",
          "$ref": "#/$defs/OneTimeAnimistPowerCost"
        },
        "duration": {
          "description": "The duration.",
          "$ref": "#/$defs/OneTimeAnimistPowerDuration"
        }
      },
      "required": [
        "cost",
        "duration"
      ],
      "additionalProperties": false
    },
    "OneTimeAnimistPowerCost": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "#/$defs/FixedOneTimeAnimistPowerCost"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByPrimaryPatron"
            },
            "by_primary_patron": {
              "$ref": "#/$defs/OneTimeAnimistPowerCostByPrimaryPatron"
            }
          },
          "required": [
            "tag",
            "by_primary_patron"
          ],
          "additionalProperties": false
        }
      ]
    },
    "FixedOneTimeAnimistPowerCost": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The AE cost value.",
          "type": "integer",
          "minimum": 1
        },
        "interval": {
          "description": "If defined, half of the AE cost `value` has to be paid each interval.",
          "$ref": "../_ActivatableSkillDuration.schema.json#/$defs/DurationUnitValue"
        }
      },
      "required": [
        "value"
      ],
      "additionalProperties": false
    },
    "OneTimeAnimistPowerCostByPrimaryPatron": {
      "type": "object",
      "properties": {
        "interval": {
          "description": "If defined, half of the AE cost `value` has to be paid each interval.",
          "$ref": "../_ActivatableSkillDuration.schema.json#/$defs/DurationUnitValue"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/AnimistPowerCostByPrimaryPatronTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [],
      "additionalProperties": false
    },
    "OneTimeAnimistPowerDuration": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Immediate"
            },
            "immediate": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "immediate"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "../FamiliarsTrick.schema.json#/$defs/FamiliarsTrickFixedOneTimeCostTranslation"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "CheckResultBased"
            },
            "check_result_based": {
              "$ref": "../_ActivatableSkillDuration.schema.json#/$defs/CheckResultBasedDuration"
            }
          },
          "required": [
            "tag",
            "check_result_based"
          ],
          "additionalProperties": false
        }
      ]
    },
    "SustainedAnimistPowerPerformanceParameters": {
      "type": "object",
      "properties": {
        "cost": {
          "description": "The AE cost value, either a flat value or defined dynamically by the\nprimary patron.",
          "$ref": "#/$defs/SustainedAnimistPowerCost"
        }
      },
      "required": [
        "cost"
      ],
      "additionalProperties": false
    },
    "SustainedAnimistPowerCost": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "#/$defs/FixedSustainedAnimistPowerCost"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByPrimaryPatron"
            },
            "by_primary_patron": {
              "$ref": "#/$defs/SustainedAnimistPowerCostByPrimaryPatron"
            }
          },
          "required": [
            "tag",
            "by_primary_patron"
          ],
          "additionalProperties": false
        }
      ]
    },
    "FixedSustainedAnimistPowerCost": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The AE cost value.",
          "type": "integer",
          "minimum": 1
        },
        "interval": {
          "description": "Half of the AE cost `value` has to be paid each interval.",
          "$ref": "../_ActivatableSkillDuration.schema.json#/$defs/DurationUnitValue"
        }
      },
      "required": [
        "value",
        "interval"
      ],
      "additionalProperties": false
    },
    "SustainedAnimistPowerCostByPrimaryPatron": {
      "type": "object",
      "properties": {
        "interval": {
          "description": "Half of the AE cost `value` has to be paid each interval.",
          "$ref": "../_ActivatableSkillDuration.schema.json#/$defs/DurationUnitValue"
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "$ref": "#/$defs/AnimistPowerCostByPrimaryPatronTranslation"
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "interval"
      ],
      "additionalProperties": false
    },
    "AnimistPowerCostByPrimaryPatronTranslation": {
      "type": "object",
      "properties": {
        "note": {
          "description": "A note, appended to the generated string in parenthesis.",
          "$ref": "../_ResponsiveText.schema.json#/$defs/ResponsiveTextOptional"
        }
      },
      "required": [
        "note"
      ],
      "additionalProperties": false
    },
    "AnimistPowerImprovementCost": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "fixed": {
              "$ref": "../_ImprovementCost.schema.json#/$defs/ImprovementCost"
            }
          },
          "required": [
            "tag",
            "fixed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByPrimaryPatron"
            },
            "by_primary_patron": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "by_primary_patron"
          ],
          "additionalProperties": false
        }
      ]
    }
  }
}
